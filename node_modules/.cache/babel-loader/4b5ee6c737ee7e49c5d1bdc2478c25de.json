{"ast":null,"code":"import _toConsumableArray from\"C:/Users/David/Documents/caffeined-dev/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/David/Documents/caffeined-dev/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Container,Button}from'react-bootstrap';import'./emojijeweled.scss';import'../../../../css/mediaqueries.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var COLS=10;var ROWS=10;var EMOTES=[\"🍳\",\"🍞\",\"🍣\",\"🧁\",\"☕\",\"🥕\",\"🍑\",\"🍇\"];export default function Emojijeweled(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),grid=_useState2[0],setGrid=_useState2[1];var _useState3=useState(60),_useState4=_slicedToArray(_useState3,2),time=_useState4[0],setTime=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),started=_useState6[0],setStarted=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),score=_useState8[0],setScore=_useState8[1];var _useState9=useState(1),_useState10=_slicedToArray(_useState9,2),chain=_useState10[0],setChain=_useState10[1];useEffect(function(){var timerId;if(started){timerId=setInterval(function(){if(time>0)setTime(function(time){return time-1;});else setStarted(false);},1000);}return function(){return clearInterval(timerId);};},[time,started]);useEffect(function(){reset();},[]);function reset(){setGrid(new Array(COLS).fill(0).map(function(v,i){return new Array(ROWS).fill(0).map(function(v,i){return EMOTES[Math.floor(Math.random()*EMOTES.length)];});}));setStarted(false);setScore(0);setTime(60);}function clickTile(r,c){if(!started)return;var pts=floodfill(r,c,grid[r][c]);if(pts>=3){setChain(function(chain){return chain+1;});setScore(score+pts*chain);}else{setChain(1);setScore(score+pts);}refill();}function refill(){var temp=_toConsumableArray(grid);for(var i=0;i<ROWS;i++){for(var r=ROWS-1;r>=1;r--){for(var c=0;c<COLS;c++){if(temp[r][c]===-1){temp[r][c]=temp[r-1][c];temp[r-1][c]=-1;}}}}for(var _r=ROWS-1;_r>=0;_r--){for(var _c=0;_c<COLS;_c++){if(temp[_r][_c]===-1){temp[_r][_c]=EMOTES[Math.floor(Math.random()*EMOTES.length)];}}}setGrid(temp);}function floodfill(r,c,value){if(r<0||c<0||r>=ROWS||c>=COLS)return 0;if(grid[r][c]!==value)return 0;grid[r][c]=-1;return 1+floodfill(r-1,c,value)+floodfill(r+1,c,value)+floodfill(r,c+1,value)+floodfill(r,c-1,value);}return/*#__PURE__*/_jsxs(Container,{className:\"media-width d-flex flex-column align-items-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"mb-5\",children:\"Emoji-Jeweled\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Click on emojis to build up points. The more clumped up the better! Chain clumps of 3 or more for bonus points.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"My personal best is 649 points\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-100 divider m-3\"}),/*#__PURE__*/_jsxs(Container,{fluid:true,className:\"d-flex align-items-center justify-content-between mb-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-25\",style:{fontSize:'2em'},children:time}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'2em'},children:[\"Score: \",score]}),!started?/*#__PURE__*/_jsx(Button,{className:\"w-25\",variant:\"success\",onClick:function onClick(){return setStarted(true);},children:\"Start\"}):/*#__PURE__*/_jsx(Button,{className:\"w-25\",variant:\"danger\",onClick:function onClick(){return reset();},children:\"Reset\"})]}),/*#__PURE__*/_jsx(Container,{fluid:true,className:\"d-flex flex-row flex-wrap\",children:grid.map(function(val,r){return val.map(function(v,c){return/*#__PURE__*/_jsx(Tile,{emoji:v,r:r,c:c,clickTile:clickTile},r+\",\"+c);});})})]});}function Tile(_ref){var emoji=_ref.emoji,r=_ref.r,c=_ref.c,clickTile=_ref.clickTile;return/*#__PURE__*/_jsx(\"div\",{className:\"tile d-flex justify-content-center align-items-center\",onClick:function onClick(){return clickTile(r,c);},children:emoji});}","map":{"version":3,"sources":["C:/Users/David/Documents/caffeined-dev/portfolio/src/routes/games/modules/Emojijeweled/emojijeweled.js"],"names":["React","useEffect","useState","Container","Button","COLS","ROWS","EMOTES","Emojijeweled","grid","setGrid","time","setTime","started","setStarted","score","setScore","chain","setChain","timerId","setInterval","clearInterval","reset","Array","fill","map","v","i","Math","floor","random","length","clickTile","r","c","pts","floodfill","refill","temp","value","fontSize","val","Tile","emoji"],"mappings":"sVAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,SAAT,CAAoBC,MAApB,KAAkC,iBAAlC,CACA,MAAO,qBAAP,CACA,MAAO,mCAAP,C,wFAEA,GAAMC,CAAAA,IAAI,CAAG,EAAb,CACA,GAAMC,CAAAA,IAAI,CAAG,EAAb,CAEA,GAAMC,CAAAA,MAAM,CAAG,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyB,GAAzB,CAA8B,IAA9B,CAAoC,IAApC,CAA0C,IAA1C,CAAf,CAEA,cAAe,SAASC,CAAAA,YAAT,EAAwB,CAEnC,cAAsBN,QAAQ,CAAC,EAAD,CAA9B,wCAAKO,IAAL,eAAWC,OAAX,eACA,eAAsBR,QAAQ,CAAC,EAAD,CAA9B,yCAAKS,IAAL,eAAWC,OAAX,eACA,eAA4BV,QAAQ,CAAC,KAAD,CAApC,yCAAKW,OAAL,eAAcC,UAAd,eACA,eAAwBZ,QAAQ,CAAC,CAAD,CAAhC,yCAAKa,KAAL,eAAYC,QAAZ,eACA,eAAwBd,QAAQ,CAAC,CAAD,CAAhC,0CAAKe,KAAL,gBAAYC,QAAZ,gBAEAjB,SAAS,CAAC,UAAM,CACZ,GAAIkB,CAAAA,OAAJ,CAEA,GAAIN,OAAJ,CAAa,CACTM,OAAO,CAAGC,WAAW,CAAC,UAAM,CACxB,GAAIT,IAAI,CAAG,CAAX,CAAcC,OAAO,CAAC,SAAAD,IAAI,QAAIA,CAAAA,IAAI,CAAG,CAAX,EAAL,CAAP,CAAd,IACKG,CAAAA,UAAU,CAAC,KAAD,CAAV,CACR,CAHoB,CAGlB,IAHkB,CAArB,CAIH,CAED,MAAO,kBAAMO,CAAAA,aAAa,CAACF,OAAD,CAAnB,EAAP,CACH,CAXQ,CAWN,CAACR,IAAD,CAAOE,OAAP,CAXM,CAAT,CAaAZ,SAAS,CAAC,UAAM,CACZqB,KAAK,GACR,CAFQ,CAEN,EAFM,CAAT,CAIA,QAASA,CAAAA,KAAT,EAAiB,CACbZ,OAAO,CAAC,GAAIa,CAAAA,KAAJ,CAAUlB,IAAV,EAAgBmB,IAAhB,CAAqB,CAArB,EAAwBC,GAAxB,CAA4B,SAACC,CAAD,CAAIC,CAAJ,QAAU,IAAIJ,CAAAA,KAAJ,CAAUjB,IAAV,EAAgBkB,IAAhB,CAAqB,CAArB,EAAwBC,GAAxB,CAA4B,SAACC,CAAD,CAAIC,CAAJ,QAAUpB,CAAAA,MAAM,CAACqB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBvB,MAAM,CAACwB,MAAlC,CAAD,CAAhB,EAA5B,CAAV,EAA5B,CAAD,CAAP,CACAjB,UAAU,CAAC,KAAD,CAAV,CACAE,QAAQ,CAAC,CAAD,CAAR,CACAJ,OAAO,CAAC,EAAD,CAAP,CACH,CAED,QAASoB,CAAAA,SAAT,CAAmBC,CAAnB,CAAsBC,CAAtB,CAAyB,CAErB,GAAI,CAACrB,OAAL,CAAc,OAEd,GAAIsB,CAAAA,GAAG,CAAGC,SAAS,CAACH,CAAD,CAAIC,CAAJ,CAAOzB,IAAI,CAACwB,CAAD,CAAJ,CAAQC,CAAR,CAAP,CAAnB,CAEA,GAAIC,GAAG,EAAI,CAAX,CAAc,CACVjB,QAAQ,CAAC,SAAAD,KAAK,QAAIA,CAAAA,KAAK,CAAG,CAAZ,EAAN,CAAR,CACAD,QAAQ,CAACD,KAAK,CAAGoB,GAAG,CAAGlB,KAAf,CAAR,CACH,CAHD,IAGO,CACHC,QAAQ,CAAC,CAAD,CAAR,CACAF,QAAQ,CAACD,KAAK,CAAGoB,GAAT,CAAR,CACH,CAGDE,MAAM,GACT,CAED,QAASA,CAAAA,MAAT,EAAkB,CACd,GAAIC,CAAAA,IAAI,oBAAO7B,IAAP,CAAR,CAEA,IAAK,GAAIkB,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGrB,IAApB,CAA0BqB,CAAC,EAA3B,CAA+B,CAC3B,IAAK,GAAIM,CAAAA,CAAC,CAAG3B,IAAI,CAAG,CAApB,CAAuB2B,CAAC,EAAI,CAA5B,CAA+BA,CAAC,EAAhC,CAAoC,CAChC,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG7B,IAApB,CAA0B6B,CAAC,EAA3B,CAA+B,CAC3B,GAAII,IAAI,CAACL,CAAD,CAAJ,CAAQC,CAAR,IAAe,CAAC,CAApB,CAAuB,CACnBI,IAAI,CAACL,CAAD,CAAJ,CAAQC,CAAR,EAAaI,IAAI,CAACL,CAAC,CAAG,CAAL,CAAJ,CAAYC,CAAZ,CAAb,CACAI,IAAI,CAACL,CAAC,CAAG,CAAL,CAAJ,CAAYC,CAAZ,EAAiB,CAAC,CAAlB,CACH,CACJ,CACJ,CACJ,CACD,IAAK,GAAID,CAAAA,EAAC,CAAG3B,IAAI,CAAG,CAApB,CAAuB2B,EAAC,EAAI,CAA5B,CAA+BA,EAAC,EAAhC,CAAoC,CAChC,IAAK,GAAIC,CAAAA,EAAC,CAAG,CAAb,CAAgBA,EAAC,CAAG7B,IAApB,CAA0B6B,EAAC,EAA3B,CAA+B,CAC3B,GAAII,IAAI,CAACL,EAAD,CAAJ,CAAQC,EAAR,IAAe,CAAC,CAApB,CAAuB,CACnBI,IAAI,CAACL,EAAD,CAAJ,CAAQC,EAAR,EAAa3B,MAAM,CAACqB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBvB,MAAM,CAACwB,MAAlC,CAAD,CAAnB,CACH,CACJ,CACJ,CACDrB,OAAO,CAAC4B,IAAD,CAAP,CACH,CAED,QAASF,CAAAA,SAAT,CAAmBH,CAAnB,CAAsBC,CAAtB,CAAyBK,KAAzB,CAAgC,CAC5B,GAAIN,CAAC,CAAG,CAAJ,EAASC,CAAC,CAAG,CAAb,EAAkBD,CAAC,EAAI3B,IAAvB,EAA+B4B,CAAC,EAAI7B,IAAxC,CAA8C,MAAO,EAAP,CAC9C,GAAII,IAAI,CAACwB,CAAD,CAAJ,CAAQC,CAAR,IAAeK,KAAnB,CAA0B,MAAO,EAAP,CAC1B9B,IAAI,CAACwB,CAAD,CAAJ,CAAQC,CAAR,EAAa,CAAC,CAAd,CAEA,MACI,GACAE,SAAS,CAACH,CAAC,CAAG,CAAL,CAAQC,CAAR,CAAWK,KAAX,CADT,CAEAH,SAAS,CAACH,CAAC,CAAG,CAAL,CAAQC,CAAR,CAAWK,KAAX,CAFT,CAGAH,SAAS,CAACH,CAAD,CAAIC,CAAC,CAAG,CAAR,CAAWK,KAAX,CAHT,CAIAH,SAAS,CAACH,CAAD,CAAIC,CAAC,CAAG,CAAR,CAAWK,KAAX,CALb,CAOH,CAGD,mBACI,MAAC,SAAD,EAAW,SAAS,CAAC,mDAArB,wBACI,WAAI,SAAS,CAAC,MAAd,2BADJ,cAEI,sIAFJ,cAGI,qDAHJ,cAII,YAAK,SAAS,CAAC,mBAAf,EAJJ,cAKI,MAAC,SAAD,EAAW,KAAK,KAAhB,CAAiB,SAAS,CAAC,wDAA3B,wBACI,YAAK,SAAS,CAAC,MAAf,CAAsB,KAAK,CAAE,CAAEC,QAAQ,CAAE,KAAZ,CAA7B,UAAmD7B,IAAnD,EADJ,cAEI,aAAK,KAAK,CAAE,CAAE6B,QAAQ,CAAE,KAAZ,CAAZ,qBAAyCzB,KAAzC,GAFJ,CAGK,CAACF,OAAD,cAAW,KAAC,MAAD,EAAQ,SAAS,CAAC,MAAlB,CAAyB,OAAO,CAAC,SAAjC,CAA2C,OAAO,CAAE,yBAAMC,CAAAA,UAAU,CAAC,IAAD,CAAhB,EAApD,mBAAX,cACG,KAAC,MAAD,EAAQ,SAAS,CAAC,MAAlB,CAAyB,OAAO,CAAC,QAAjC,CAA0C,OAAO,CAAE,yBAAMQ,CAAAA,KAAK,EAAX,EAAnD,mBAJR,GALJ,cAWI,KAAC,SAAD,EAAW,KAAK,KAAhB,CAAiB,SAAS,CAAC,2BAA3B,UACKb,IAAI,CAACgB,GAAL,CAAS,SAACgB,GAAD,CAAMR,CAAN,QAAYQ,CAAAA,GAAG,CAAChB,GAAJ,CAAQ,SAACC,CAAD,CAAIQ,CAAJ,qBAAU,KAAC,IAAD,EAAwB,KAAK,CAAER,CAA/B,CAAkC,CAAC,CAAEO,CAArC,CAAwC,CAAC,CAAEC,CAA3C,CAA8C,SAAS,CAAEF,SAAzD,EAAWC,CAAC,CAAG,GAAJ,CAAUC,CAArB,CAAV,EAAR,CAAZ,EAAT,CADL,EAXJ,GADJ,CAiBH,CAGD,QAASQ,CAAAA,IAAT,MAA0C,IAA1BC,CAAAA,KAA0B,MAA1BA,KAA0B,CAAnBV,CAAmB,MAAnBA,CAAmB,CAAhBC,CAAgB,MAAhBA,CAAgB,CAAbF,SAAa,MAAbA,SAAa,CAEtC,mBACI,YAAK,SAAS,CAAC,uDAAf,CAAuE,OAAO,CAAE,yBAAMA,CAAAA,SAAS,CAACC,CAAD,CAAIC,CAAJ,CAAf,EAAhF,UACKS,KADL,EADJ,CAKH","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport './emojijeweled.scss';\r\nimport '../../../../css/mediaqueries.scss';\r\n\r\nconst COLS = 10;\r\nconst ROWS = 10;\r\n\r\nconst EMOTES = [\"🍳\", \"🍞\", \"🍣\", \"🧁\", \"☕\", \"🥕\", \"🍑\", \"🍇\"];\r\n\r\nexport default function Emojijeweled() {\r\n\r\n    let [grid, setGrid] = useState([]);\r\n    let [time, setTime] = useState(60);\r\n    let [started, setStarted] = useState(false);\r\n    let [score, setScore] = useState(0);\r\n    let [chain, setChain] = useState(1);\r\n\r\n    useEffect(() => {\r\n        let timerId;\r\n\r\n        if (started) {\r\n            timerId = setInterval(() => {\r\n                if (time > 0) setTime(time => time - 1);\r\n                else setStarted(false);\r\n            }, 1000);\r\n        }\r\n\r\n        return () => clearInterval(timerId);\r\n    }, [time, started])\r\n\r\n    useEffect(() => {\r\n        reset();\r\n    }, []);\r\n\r\n    function reset() {\r\n        setGrid(new Array(COLS).fill(0).map((v, i) => new Array(ROWS).fill(0).map((v, i) => EMOTES[Math.floor(Math.random() * EMOTES.length)])));\r\n        setStarted(false);\r\n        setScore(0);\r\n        setTime(60);\r\n    }\r\n\r\n    function clickTile(r, c) {\r\n\r\n        if (!started) return;\r\n\r\n        let pts = floodfill(r, c, grid[r][c]);\r\n\r\n        if (pts >= 3) {\r\n            setChain(chain => chain + 1);\r\n            setScore(score + pts * chain);\r\n        } else {\r\n            setChain(1);\r\n            setScore(score + pts);\r\n        }\r\n\r\n\r\n        refill();\r\n    }\r\n\r\n    function refill() {\r\n        let temp = [...grid];\r\n\r\n        for (let i = 0; i < ROWS; i++) {\r\n            for (let r = ROWS - 1; r >= 1; r--) {\r\n                for (let c = 0; c < COLS; c++) {\r\n                    if (temp[r][c] === -1) {\r\n                        temp[r][c] = temp[r - 1][c];\r\n                        temp[r - 1][c] = -1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let r = ROWS - 1; r >= 0; r--) {\r\n            for (let c = 0; c < COLS; c++) {\r\n                if (temp[r][c] === -1) {\r\n                    temp[r][c] = EMOTES[Math.floor(Math.random() * EMOTES.length)];\r\n                }\r\n            }\r\n        }\r\n        setGrid(temp);\r\n    }\r\n\r\n    function floodfill(r, c, value) {\r\n        if (r < 0 || c < 0 || r >= ROWS || c >= COLS) return 0;\r\n        if (grid[r][c] !== value) return 0;\r\n        grid[r][c] = -1;\r\n\r\n        return (\r\n            1 +\r\n            floodfill(r - 1, c, value) +\r\n            floodfill(r + 1, c, value) +\r\n            floodfill(r, c + 1, value) +\r\n            floodfill(r, c - 1, value)\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=\"media-width d-flex flex-column align-items-center\">\r\n            <h2 className=\"mb-5\">Emoji-Jeweled</h2>\r\n            <p>Click on emojis to build up points. The more clumped up the better! Chain clumps of 3 or more for bonus points.</p>\r\n            <p>My personal best is 649 points</p>\r\n            <div className=\"w-100 divider m-3\" />\r\n            <Container fluid className=\"d-flex align-items-center justify-content-between mb-3\">\r\n                <div className=\"w-25\" style={{ fontSize: '2em' }}>{time}</div>\r\n                <div style={{ fontSize: '2em' }}>Score: {score}</div>\r\n                {!started ? <Button className=\"w-25\" variant=\"success\" onClick={() => setStarted(true)}>Start</Button> :\r\n                    <Button className=\"w-25\" variant=\"danger\" onClick={() => reset()}>Reset</Button>}\r\n            </Container>\r\n            <Container fluid className=\"d-flex flex-row flex-wrap\">\r\n                {grid.map((val, r) => val.map((v, c) => <Tile key={r + \",\" + c} emoji={v} r={r} c={c} clickTile={clickTile} />))}\r\n            </Container>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nfunction Tile({ emoji, r, c, clickTile }) {\r\n\r\n    return (\r\n        <div className=\"tile d-flex justify-content-center align-items-center\" onClick={() => clickTile(r, c)}>\r\n            {emoji}\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}