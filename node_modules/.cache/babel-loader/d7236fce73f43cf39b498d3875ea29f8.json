{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\caffeined-dev\\\\portfolio\\\\src\\\\routes\\\\games\\\\modules\\\\Emojijeweled\\\\emojijeweled.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport './emojijeweled.scss';\nimport '../../../../css/mediaqueries.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLS = 10;\nconst ROWS = 10;\nconst EMOTES = [\"🍳\", \"🍞\", \"🍣\", \"🧁\", \"☕\", \"🥕\", \"🍑\", \"🍇\"];\nexport default function Emojijeweled() {\n  _s();\n\n  let [grid, setGrid] = useState([]);\n  useEffect(() => {\n    reset();\n  }, []);\n\n  function reset() {\n    setGrid(new Array(COLS).fill(0).map((v, i) => new Array(ROWS).fill(0).map((v, i) => EMOTES[Math.floor(Math.random() * EMOTES.length)])));\n  }\n\n  console.log(grid);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"media-width d-flex flex-column align-items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-5\",\n      children: \"Emoji-Jeweled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Try to beat my high score of ____ by matching the emojis!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"d-flex flex-row flex-wrap\",\n      children: grid.map((val, r) => val.map((v, c) => /*#__PURE__*/_jsxDEV(Tile, {\n        emoji: v\n      }, r + \",\" + c, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 55\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Emojijeweled, \"w1YSakViRD9z3AUkL5Qso5coyFg=\");\n\n_c = Emojijeweled;\n\nfunction Tile({\n  emoji\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    style: {\n      width: \"10%\"\n    },\n    children: emoji\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Tile;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Emojijeweled\");\n$RefreshReg$(_c2, \"Tile\");","map":{"version":3,"sources":["C:/Users/David/Documents/caffeined-dev/portfolio/src/routes/games/modules/Emojijeweled/emojijeweled.js"],"names":["React","useEffect","useState","Container","COLS","ROWS","EMOTES","Emojijeweled","grid","setGrid","reset","Array","fill","map","v","i","Math","floor","random","length","console","log","val","r","c","Tile","emoji","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAO,qBAAP;AACA,OAAO,mCAAP;;AAEA,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,IAAI,GAAG,EAAb;AAEA,MAAMC,MAAM,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,GAAzB,EAA8B,IAA9B,EAAoC,IAApC,EAA0C,IAA1C,CAAf;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAEnC,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,KAAT,GAAiB;AACbD,IAAAA,OAAO,CAAC,IAAIE,KAAJ,CAAUP,IAAV,EAAgBQ,IAAhB,CAAqB,CAArB,EAAwBC,GAAxB,CAA4B,CAACC,CAAD,EAAIC,CAAJ,KAAU,IAAIJ,KAAJ,CAAUN,IAAV,EAAgBO,IAAhB,CAAqB,CAArB,EAAwBC,GAAxB,CAA4B,CAACC,CAAD,EAAIC,CAAJ,KAAUT,MAAM,CAACU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,MAAM,CAACa,MAAlC,CAAD,CAA5C,CAAtC,CAAD,CAAP;AACH;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AAEA,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,mDAArB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,SAAS,EAAC,2BAA3B;AAAA,gBACKA,IAAI,CAACK,GAAL,CAAS,CAACS,GAAD,EAAKC,CAAL,KAAWD,GAAG,CAACT,GAAJ,CAAQ,CAACC,CAAD,EAAGU,CAAH,kBAAS,QAAC,IAAD;AAAuB,QAAA,KAAK,EAAEV;AAA9B,SAAWS,CAAC,GAAG,GAAJ,GAAUC,CAArB;AAAA;AAAA;AAAA;AAAA,cAAjB,CAApB;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAvBuBjB,Y;;KAAAA,Y;;AA0BxB,SAASkB,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAyB;AAErB,sBACI;AAAK,IAAA,SAAS,EAAC,EAAf;AAAkB,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAzB;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;MAPQD,I","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport './emojijeweled.scss';\r\nimport '../../../../css/mediaqueries.scss';\r\n\r\nconst COLS = 10;\r\nconst ROWS = 10;\r\n\r\nconst EMOTES = [\"🍳\", \"🍞\", \"🍣\", \"🧁\", \"☕\", \"🥕\", \"🍑\", \"🍇\"];\r\n\r\nexport default function Emojijeweled() {\r\n\r\n    let [grid, setGrid] = useState([]);\r\n\r\n    useEffect(() => {\r\n        reset();\r\n    }, []);\r\n\r\n    function reset() {\r\n        setGrid(new Array(COLS).fill(0).map((v, i) => new Array(ROWS).fill(0).map((v, i) => EMOTES[Math.floor(Math.random() * EMOTES.length)])));\r\n    }\r\n\r\n    console.log(grid);\r\n\r\n    return (\r\n        <Container className=\"media-width d-flex flex-column align-items-center\">\r\n            <h2 className=\"mb-5\">Emoji-Jeweled</h2>\r\n            <p>Try to beat my high score of ____ by matching the emojis!</p>\r\n            <Container fluid className=\"d-flex flex-row flex-wrap\">\r\n                {grid.map((val,r) => val.map((v,c) => <Tile key={r + \",\" + c}emoji={v}/>))}\r\n            </Container>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nfunction Tile({ emoji }) {\r\n\r\n    return (\r\n        <div className=\"\" style={{width: \"10%\"}}>\r\n            {emoji}\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}