{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\caffeined-dev\\\\portfolio\\\\src\\\\routes\\\\games\\\\modules\\\\Typing Test\\\\typing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport './typing.scss';\nimport '../../../../css/mediaqueries.scss';\nimport randomWords from 'random-words';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Typing() {\n  _s();\n\n  let [words, setWords] = useState(randomWords({\n    exactly: 100\n  }));\n  let [accuracy, setAccuracy] = useState(new Array(100).fill(0));\n  let [current, setCurrent] = useState(0);\n  let [word, setWord] = useState(\"\");\n\n  function checkKey(event) {\n    if (event.target.value[event.target.value.length - 1] === ' ') {\n      setCurrent(current + 1);\n    } else {\n      setWord(event.target.value);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"media-width\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"d-flex words-container mb-3 p-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formInput\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: word,\n          onChange: ev => checkKey(ev)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Typing, \"SYfu/V7VnKDzq+ovOQePv/6UZ1k=\");\n\n_c = Typing;\n\nfunction Word({\n  word,\n  active\n}) {}\n\n_c2 = Word;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Typing\");\n$RefreshReg$(_c2, \"Word\");","map":{"version":3,"sources":["C:/Users/David/Documents/caffeined-dev/portfolio/src/routes/games/modules/Typing Test/typing.js"],"names":["React","useEffect","useState","Container","Form","randomWords","Typing","words","setWords","exactly","accuracy","setAccuracy","Array","fill","current","setCurrent","word","setWord","checkKey","event","target","value","length","ev","Word","active"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,iBAAhC;AACA,OAAO,eAAP;AACA,OAAO,mCAAP;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAE7B,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACG,WAAW,CAAE;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAF,CAAZ,CAAhC;AACA,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAIU,KAAJ,CAAU,GAAV,EAAeC,IAAf,CAAoB,CAApB,CAAD,CAAtC;AACA,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,CAAD,CAApC;AACA,MAAI,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAA9B;;AAEA,WAASgB,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAGA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBF,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,GAA4B,CAA/C,MAAsD,GAAzD,EAA8D;AAC1DP,MAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACH,KAFD,MAEO;AACHG,MAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACH;AACJ;;AAED,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,aAArB;AAAA,4BAEI,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI,QAAC,IAAD;AAAA,6BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,WAAtB;AAAA,+BACI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,KAAK,EAAEL,IAAjC;AAAuC,UAAA,QAAQ,EAAEO,EAAE,IAAIL,QAAQ,CAACK,EAAD;AAA/D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA7BuBjB,M;;KAAAA,M;;AAgCxB,SAASkB,IAAT,CAAc;AAACR,EAAAA,IAAD;AAAOS,EAAAA;AAAP,CAAd,EAA8B,CAE7B;;MAFQD,I","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Container, Form } from 'react-bootstrap';\r\nimport './typing.scss';\r\nimport '../../../../css/mediaqueries.scss';\r\nimport randomWords from 'random-words';\r\n\r\nexport default function Typing() {\r\n\r\n    let [words, setWords] = useState(randomWords( { exactly: 100 }))\r\n    let [accuracy, setAccuracy] = useState(new Array(100).fill(0));\r\n    let [current, setCurrent] = useState(0);\r\n    let [word, setWord] = useState(\"\");\r\n\r\n    function checkKey(event) {\r\n        if(event.target.value[event.target.value.length - 1] === ' ') {\r\n            setCurrent(current + 1);\r\n        } else {\r\n            setWord(event.target.value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className=\"media-width\">\r\n\r\n            <Container fluid className=\"d-flex words-container mb-3 p-5\">\r\n                \r\n            </Container>\r\n\r\n            <Form>\r\n                <Form.Group controlId=\"formInput\">\r\n                    <Form.Control type=\"text\" value={word} onChange={ev => checkKey(ev)}/>\r\n                </Form.Group>\r\n            </Form>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nfunction Word({word, active}) {\r\n\r\n}"]},"metadata":{},"sourceType":"module"}