{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\caffeined-dev\\\\portfolio\\\\src\\\\routes\\\\games\\\\modules\\\\Typing Test\\\\typing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport './typing.scss';\nimport '../../../../css/mediaqueries.scss';\nimport randomWords from 'random-words';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Typing() {\n  _s();\n\n  let [words, setWords] = useState(randomWords({\n    exactly: 10\n  }));\n  let [accuracy, setAccuracy] = useState(new Array(10).fill(0));\n  let [current, setCurrent] = useState(0);\n  let [word, setWord] = useState(\"\");\n  let [time, setTime] = useState(0);\n  let [started, setStarted] = useState(false);\n  useEffect(() => {\n    let timerId;\n\n    if (started) {\n      timerId = setInterval(() => {\n        setTime(time => time + 1);\n      }, 1000);\n    }\n\n    return () => clearInterval(timerId);\n  }, [time, started]);\n\n  function checkKey(event) {\n    if (current >= words.length - 1) {\n      setStarted(false);\n      checkResult();\n      return;\n    }\n\n    if (current === 0) {\n      setStarted(true);\n    }\n\n    if (event.target.value[event.target.value.length - 1] === ' ') {\n      setCurrent(current + 1);\n      let temp = [...accuracy];\n\n      if (word === words[current]) {\n        temp[current]++;\n      } else {\n        temp[current]--;\n      }\n\n      setAccuracy(temp);\n      setWord(\"\");\n    } else {\n      setWord(event.target.value);\n    }\n  }\n\n  function checkResult() {\n    let cnt = 0;\n    accuracy.forEach((v, i) => v === 1 ? cnt++ : undefined);\n    console.log(cnt / time);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"media-width d-flex flex-column align-items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-5\",\n      children: \"Typing Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Type 100 words as quickly and accurately as you can.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"My personal best is 141 WPM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 divider m-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"d-flex align-items-center justify-content-between mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '2em'\n        },\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"d-flex words-container mb-3 p-5 flex-wrap\",\n      children: words.map((v, i) => /*#__PURE__*/_jsxDEV(Word, {\n        word: v,\n        active: i === current,\n        result: accuracy[i]\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formInput\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Start typing to begin\",\n          type: \"text\",\n          value: word,\n          onChange: ev => checkKey(ev)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Typing, \"Y3fu7oXV7dRUC+ZtMRWvjSRQeBk=\");\n\n_c = Typing;\n\nfunction Word({\n  word,\n  active,\n  result\n}) {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: `mr-2 ${active ? \"word-active\" : result === 1 ? \"word-correct\" : result === -1 ? \"word-wrong\" : 'text-muted'}`,\n    children: word\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Word;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Typing\");\n$RefreshReg$(_c2, \"Word\");","map":{"version":3,"sources":["C:/Users/David/Documents/caffeined-dev/portfolio/src/routes/games/modules/Typing Test/typing.js"],"names":["React","useEffect","useState","Container","Form","Button","randomWords","Typing","words","setWords","exactly","accuracy","setAccuracy","Array","fill","current","setCurrent","word","setWord","time","setTime","started","setStarted","timerId","setInterval","clearInterval","checkKey","event","length","checkResult","target","value","temp","cnt","forEach","v","i","undefined","console","log","fontSize","map","ev","Word","active","result"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport './typing.scss';\r\nimport '../../../../css/mediaqueries.scss';\r\nimport randomWords from 'random-words';\r\n\r\nexport default function Typing() {\r\n\r\n    let [words, setWords]  = useState(randomWords({ exactly: 10 }));\r\n    let [accuracy, setAccuracy] = useState(new Array(10).fill(0));\r\n    let [current, setCurrent] = useState(0);\r\n    let [word, setWord] = useState(\"\");\r\n    let [time, setTime] = useState(0);\r\n    let [started, setStarted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let timerId;\r\n\r\n        if(started) {\r\n            timerId = setInterval(() => {\r\n                setTime(time => time + 1);\r\n            }, 1000);\r\n        }\r\n\r\n        return () => clearInterval(timerId);\r\n    }, [time, started])\r\n\r\n    function checkKey(event) {\r\n\r\n        if(current >= words.length - 1) {\r\n            setStarted(false);\r\n            checkResult();\r\n            return;\r\n        }\r\n\r\n        if(current === 0) {\r\n            setStarted(true);\r\n        }\r\n\r\n\r\n        if(event.target.value[event.target.value.length - 1] === ' ') {\r\n            setCurrent(current + 1);\r\n\r\n            let temp = [...accuracy];\r\n            if(word === words[current]) {\r\n                temp[current]++;\r\n            } else {\r\n                temp[current]--;\r\n            }\r\n\r\n            setAccuracy(temp);\r\n            setWord(\"\");\r\n        } else {\r\n            setWord(event.target.value);\r\n        }\r\n    }\r\n\r\n    function checkResult() {\r\n        let cnt = 0;\r\n        accuracy.forEach((v, i) => v === 1 ? cnt++ : undefined);\r\n        console.log(cnt / time);\r\n    }\r\n\r\n    return (\r\n        <Container className=\"media-width d-flex flex-column align-items-center\">\r\n            <h2 className=\"mb-5\">Typing Test</h2>\r\n            <p>Type 100 words as quickly and accurately as you can.</p>\r\n            <p>My personal best is 141 WPM</p>\r\n            <div className=\"w-100 divider m-3\" />\r\n            <Container fluid className=\"d-flex align-items-center justify-content-between mb-3\">\r\n                <div style={{ fontSize: '2em' }}>{time}</div>\r\n                <Button variant=\"danger\">Reset</Button>\r\n            </Container>\r\n            <Container fluid className=\"d-flex words-container mb-3 p-5 flex-wrap\">\r\n                {words.map((v, i) => <Word key={i} word={v} active={i === current} result={accuracy[i]}/>)}\r\n            </Container>\r\n            <Form>\r\n                <Form.Group controlId=\"formInput\">\r\n                    <Form.Control placeholder=\"Start typing to begin\" type=\"text\" value={word} onChange={ev => checkKey(ev)}/>\r\n                </Form.Group>\r\n            </Form>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nfunction Word({word, active, result}) {\r\n    return (\r\n        <p className={`mr-2 ${active ? \"word-active\" : result === 1 ? \"word-correct\" : result === -1 ? \"word-wrong\" : 'text-muted'}`}>{word}</p>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}