{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Documents\\\\caffeined-dev\\\\portfolio\\\\src\\\\routes\\\\games\\\\modules\\\\Emojijeweled\\\\emojijeweled.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Button } from 'react-bootstrap';\nimport './emojijeweled.scss';\nimport '../../../../css/mediaqueries.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLS = 10;\nconst ROWS = 10;\nconst EMOTES = [\"🍳\", \"🍞\", \"🍣\", \"🧁\", \"☕\", \"🥕\", \"🍑\", \"🍇\"];\nexport default function Emojijeweled() {\n  _s();\n\n  let [grid, setGrid] = useState([]);\n  let [time, setTime] = useState(60);\n  let [started, setStarted] = useState(false);\n  let [result, setResult] = useState(0);\n  useEffect(() => {\n    let timerId;\n\n    if (started) {\n      timerId = setInterval(() => {\n        setTime(time => time - 1);\n      }, 1000);\n    }\n\n    return () => clearInterval(timerId);\n  }, [time, started]);\n  useEffect(() => {\n    reset();\n  }, []);\n\n  function reset() {\n    setGrid(new Array(COLS).fill(0).map((v, i) => new Array(ROWS).fill(0).map((v, i) => EMOTES[Math.floor(Math.random() * EMOTES.length)])));\n  }\n\n  console.log(grid);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"media-width d-flex flex-column align-items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-5\",\n      children: \"Emoji-Jeweled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Click on emojis to build up points. The more clumped up the better!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"My personal best is ____ points\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 divider m-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"d-flex align-items-center justify-content-between mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-25\",\n        style: {\n          fontSize: '2em'\n        },\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '2em'\n        },\n        children: result !== 0 ? \"WPM: \" + result : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"w-25\",\n        variant: \"danger\",\n        onClick: () => reset(),\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"d-flex flex-row flex-wrap\",\n      children: grid.map((val, r) => val.map((v, c) => /*#__PURE__*/_jsxDEV(Tile, {\n        emoji: v\n      }, r + \",\" + c, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 57\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Emojijeweled, \"hhaJW11rAe0tTFo+OqWm07737LQ=\");\n\n_c = Emojijeweled;\n\nfunction Tile({\n  emoji\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tile d-flex justify-content-center align-items-center\",\n    children: emoji\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Tile;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Emojijeweled\");\n$RefreshReg$(_c2, \"Tile\");","map":{"version":3,"sources":["C:/Users/David/Documents/caffeined-dev/portfolio/src/routes/games/modules/Emojijeweled/emojijeweled.js"],"names":["React","useEffect","useState","Container","Button","COLS","ROWS","EMOTES","Emojijeweled","grid","setGrid","time","setTime","started","setStarted","result","setResult","timerId","setInterval","clearInterval","reset","Array","fill","map","v","i","Math","floor","random","length","console","log","fontSize","val","r","c","Tile","emoji"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport './emojijeweled.scss';\r\nimport '../../../../css/mediaqueries.scss';\r\n\r\nconst COLS = 10;\r\nconst ROWS = 10;\r\n\r\nconst EMOTES = [\"🍳\", \"🍞\", \"🍣\", \"🧁\", \"☕\", \"🥕\", \"🍑\", \"🍇\"];\r\n\r\nexport default function Emojijeweled() {\r\n\r\n    let [grid, setGrid] = useState([]);\r\n    let [time, setTime] = useState(60);\r\n    let [started, setStarted] = useState(false);\r\n    let [result, setResult] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let timerId;\r\n\r\n        if(started) {\r\n            timerId = setInterval(() => {\r\n                setTime(time => time - 1);\r\n            }, 1000);\r\n        }\r\n\r\n        return () => clearInterval(timerId);\r\n    }, [time, started])\r\n\r\n    useEffect(() => {\r\n        reset();\r\n    }, []);\r\n\r\n    function reset() {\r\n        setGrid(new Array(COLS).fill(0).map((v, i) => new Array(ROWS).fill(0).map((v, i) => EMOTES[Math.floor(Math.random() * EMOTES.length)])));\r\n    }\r\n\r\n    console.log(grid);\r\n\r\n    return (\r\n        <Container className=\"media-width d-flex flex-column align-items-center\">\r\n            <h2 className=\"mb-5\">Emoji-Jeweled</h2>\r\n            <p>Click on emojis to build up points. The more clumped up the better!</p>\r\n            <p>My personal best is ____ points</p>\r\n            <div className=\"w-100 divider m-3\" />\r\n            <Container fluid className=\"d-flex align-items-center justify-content-between mb-3\">\r\n                <div className=\"w-25\" style={{ fontSize: '2em' }}>{time}</div>\r\n                <div style={{ fontSize: '2em' }}>{result !== 0 ? (\"WPM: \" + result) : \"\"}</div>\r\n                <Button className=\"w-25\" variant=\"danger\" onClick={() => reset()}>Reset</Button>\r\n            </Container>\r\n            <Container fluid className=\"d-flex flex-row flex-wrap\">\r\n                {grid.map((val, r) => val.map((v, c) => <Tile key={r + \",\" + c} emoji={v} />))}\r\n            </Container>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nfunction Tile({ emoji }) {\r\n\r\n    return (\r\n        <div className=\"tile d-flex justify-content-center align-items-center\">\r\n            {emoji}\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}