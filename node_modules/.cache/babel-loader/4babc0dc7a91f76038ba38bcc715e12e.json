{"ast":null,"code":"import _toConsumableArray from\"C:/Users/David/Documents/caffeined-dev/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/David/Documents/caffeined-dev/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Container,Form,Button}from'react-bootstrap';import'./typing.scss';import'../../../../css/mediaqueries.scss';import randomWords from'random-words';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Typing(){var _useState=useState(randomWords({exactly:100})),_useState2=_slicedToArray(_useState,2),words=_useState2[0],setWords=_useState2[1];var _useState3=useState(new Array(100).fill(0)),_useState4=_slicedToArray(_useState3,2),accuracy=_useState4[0],setAccuracy=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),current=_useState6[0],setCurrent=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),word=_useState8[0],setWord=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),time=_useState10[0],setTime=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),started=_useState12[0],setStarted=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),result=_useState14[0],setResult=_useState14[1];useEffect(function(){var timerId;if(started){timerId=setInterval(function(){setTime(function(time){return time+1;});},1000);}return function(){return clearInterval(timerId);};},[time,started]);function checkKey(event){if(current===0)setStarted(true);if(event.target.value[event.target.value.length-1]===' '){setCurrent(current+1);var temp=_toConsumableArray(accuracy);if(word===words[current])temp[current]++;else temp[current]--;setAccuracy(temp);setWord(\"\");}else setWord(event.target.value);if(current>=words.length-1){setStarted(false);checkResult();return;}}function checkResult(){var cnt=0;accuracy.forEach(function(v,i){return v===1?cnt++:undefined;});setResult(Math.floor(60*cnt/time));}function reset(){setWords(randomWords({exactly:100}));setAccuracy(new Array(100).fill(0));setCurrent(0);setTime(0);setResult(0);setStarted(false);}return/*#__PURE__*/_jsxs(Container,{className:\"media-width d-flex flex-column align-items-center mb-5\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"mb-5\",children:\"Typing Test\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Type 100 words as quickly and accurately as you can.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"My personal best is 141 WPM\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-100 divider m-3\"}),/*#__PURE__*/_jsxs(Container,{fluid:true,className:\"d-flex align-items-center justify-content-between mb-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-25\",style:{fontSize:'2em'},children:time}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'2em'},children:result!==0?\"WPM: \"+result:\"\"}),/*#__PURE__*/_jsx(Button,{className:\"w-25\",variant:\"danger\",onClick:function onClick(){return reset();},children:\"Reset\"})]}),/*#__PURE__*/_jsx(Container,{fluid:true,className:\"d-flex words-container mb-3 p-5 flex-wrap\",children:words.map(function(v,i){return/*#__PURE__*/_jsx(Word,{word:v,active:i===current,result:accuracy[i]},i);})}),/*#__PURE__*/_jsx(Form,{className:\"w-100\",children:/*#__PURE__*/_jsx(Form.Group,{controlId:\"formInput\",children:/*#__PURE__*/_jsx(Form.Control,{placeholder:\"Start typing to begin\",type:\"text\",value:word,onChange:function onChange(ev){return checkKey(ev);}})})})]});}function Word(_ref){var word=_ref.word,active=_ref.active,result=_ref.result;return/*#__PURE__*/_jsx(\"p\",{className:\"mr-2 \".concat(active?\"word-active\":result===1?\"word-correct\":result===-1?\"word-wrong\":'text-muted'),children:word});}","map":{"version":3,"sources":["C:/Users/David/Documents/caffeined-dev/portfolio/src/routes/games/modules/Typing Test/typing.js"],"names":["React","useEffect","useState","Container","Form","Button","randomWords","Typing","exactly","words","setWords","Array","fill","accuracy","setAccuracy","current","setCurrent","word","setWord","time","setTime","started","setStarted","result","setResult","timerId","setInterval","clearInterval","checkKey","event","target","value","length","temp","checkResult","cnt","forEach","v","i","undefined","Math","floor","reset","fontSize","map","ev","Word","active"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport './typing.scss';\r\nimport '../../../../css/mediaqueries.scss';\r\nimport randomWords from 'random-words';\r\n\r\nexport default function Typing() {\r\n\r\n    let [words, setWords]  = useState(randomWords({ exactly: 100 }));\r\n    let [accuracy, setAccuracy] = useState(new Array(100).fill(0));\r\n    let [current, setCurrent] = useState(0);\r\n    let [word, setWord] = useState(\"\");\r\n    let [time, setTime] = useState(0);\r\n    let [started, setStarted] = useState(false);\r\n    let [result, setResult] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let timerId;\r\n\r\n        if(started) {\r\n            timerId = setInterval(() => {\r\n                setTime(time => time + 1);\r\n            }, 1000);\r\n        }\r\n\r\n        return () => clearInterval(timerId);\r\n    }, [time, started])\r\n\r\n    function checkKey(event) {\r\n        if(current === 0)\r\n            setStarted(true);\r\n\r\n        if(event.target.value[event.target.value.length - 1] === ' ') {\r\n            setCurrent(current + 1);\r\n            let temp = [...accuracy];\r\n            if(word === words[current])\r\n                temp[current]++;\r\n            else\r\n                temp[current]--;\r\n            setAccuracy(temp);\r\n            setWord(\"\");\r\n        } else\r\n            setWord(event.target.value);\r\n\r\n        if(current >= words.length - 1) {\r\n            setStarted(false);\r\n            checkResult();\r\n            return;\r\n        }\r\n    }\r\n\r\n    function checkResult() {\r\n        let cnt = 0;\r\n        accuracy.forEach((v, i) => v === 1 ? cnt++ : undefined);\r\n        setResult(Math.floor(60 * cnt / time));\r\n    }\r\n\r\n    function reset() {\r\n        setWords(randomWords({ exactly: 100 }));\r\n        setAccuracy(new Array(100).fill(0));\r\n        setCurrent(0);\r\n        setTime(0);\r\n        setResult(0);\r\n        setStarted(false);\r\n    }\r\n\r\n    return (\r\n        <Container className=\"media-width d-flex flex-column align-items-center mb-5\">\r\n            <h2 className=\"mb-5\">Typing Test</h2>\r\n            <p>Type 100 words as quickly and accurately as you can.</p>\r\n            <p>My personal best is 141 WPM</p>\r\n            <div className=\"w-100 divider m-3\" />\r\n            <Container fluid className=\"d-flex align-items-center justify-content-between mb-3\">\r\n                <div className=\"w-25\" style={{ fontSize: '2em' }}>{time}</div>\r\n                <div style={{ fontSize: '2em' }}>{result !== 0 ? (\"WPM: \" + result) : \"\"}</div>\r\n                <Button className=\"w-25\" variant=\"danger\" onClick={() => reset()}>Reset</Button>\r\n            </Container>\r\n            <Container fluid className=\"d-flex words-container mb-3 p-5 flex-wrap\">\r\n                {words.map((v, i) => <Word key={i} word={v} active={i === current} result={accuracy[i]}/>)}\r\n            </Container>\r\n            <Form className=\"w-100\">\r\n                <Form.Group controlId=\"formInput\">\r\n                    <Form.Control placeholder=\"Start typing to begin\" type=\"text\" value={word} onChange={ev => checkKey(ev)}/>\r\n                </Form.Group>\r\n            </Form>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nfunction Word({word, active, result}) {\r\n    return (\r\n        <p className={`mr-2 ${active ? \"word-active\" : result === 1 ? \"word-correct\" : result === -1 ? \"word-wrong\" : 'text-muted'}`}>{word}</p>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}